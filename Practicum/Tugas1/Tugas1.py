# -*- coding: utf-8 -*-
"""Tugas1PrakDM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jwB2JWCflzj8yeYC3uqf1yce9ilfic13

1. Import library yang dibutuhkan
"""

import pandas as pd
from sklearn.tree import DecisionTreeClassifier # Import Decision Tree Classifier
from sklearn.model_selection import train_test_split # Import train_test_split function
from sklearn import metrics #Import scikit-learn metrics module for accuracy calculation

"""2. Deskripsikan dataset dan tampilkan data data teratas"""

col_names = ['UserID', 'Gender','Age', 'EstimatedSalary', 'Purchased']
# load dataset
social = pd.read_csv("social.csv", header=None, names=col_names,skiprows=1)

social.head()

"""3. Deskripsikan jumlah data setiap kelas"""

social.info()

social['Purchased'].value_counts()

"""4. Lakukan feature selection"""

#split dataset in features and target variable
feature_cols = ['Age', 'EstimatedSalary']
X = social[feature_cols] # Features
y = social.Purchased # Target variable

"""5. Lakukan splitting data"""

X_train, X_test, y_train, y_test =  train_test_split(X,y,test_size = 0.3, random_state= 1)

"""6. Bangun model Decision tree"""

# Create Decision Tree classifer object
clf = DecisionTreeClassifier()

# Train Decision Tree Classifer
clf = clf.fit(X_train, y_train)

#Predict the response for test dataset
y_pred = clf.predict(X_test)

"""7. Tampilkan akurasi model"""

# Model Accuracy, how often is the classifier correct?
print("Accuracy:",metrics.accuracy_score(y_test, y_pred))

"""8. Visualisasikan model"""

from sklearn import tree
import matplotlib.pyplot as plt

plt.figure(figsize=(12, 5), dpi=500)
tree.plot_tree(clf,
               feature_names=feature_cols,
               class_names=["0", "1"],
               filled=True,
               rounded=True);
plt.savefig('dtree.png')

"""9. Lakukan langkah 6-8 dengan pengoptimalisasian model"""

# Create Decision Tree classifer object
clf = DecisionTreeClassifier(criterion="entropy", max_depth=3)

# Train Decision Tree Classifer
clf = clf.fit(X_train,y_train)

#Predict the response for test dataset
y_pred = clf.predict(X_test)

# Model Accuracy, how often is the classifier correct?
print("Accuracy:",metrics.accuracy_score(y_test, y_pred))

plt.figure(figsize=(8, 3), dpi=200)
tree.plot_tree(clf,
               feature_names=feature_cols,
               class_names=["0", "1"],
               filled=True,
               rounded=True);
plt.savefig('social.png')

# Print the Confusion Matrix and slice it into four pieces
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
print('Confusion matrix\n\n', cm)